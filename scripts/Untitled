# scripts/update_nvd.py
import requests
import gzip
import shutil
import os
from pathlib import Path

# Usando a URL do feed 1.1 JSON mais recente como exemplo
# Para uma análise completa, você pode querer baixar todos os feeds anuais.
NVD_URL = "https://nvd.nist.gov/feeds/json/cve/1.1/nvdcve-1.1-recent.json.gz"
# Assume que o script está em /scripts e data está em /data
DATA_DIR = Path(__file__).parent.parent / "data"
OUTPUT_FILENAME = "nvd_cve.json"
OUTPUT_FILE_PATH = DATA_DIR / OUTPUT_FILENAME
DOWNLOAD_TMP_GZ = DATA_DIR / "nvd_cve.json.gz"

def download_and_extract_nvd():
    """Downloads the latest NVD JSON feed and extracts it."""
    print(f"Creating data directory if it doesn't exist: {DATA_DIR}")
    DATA_DIR.mkdir(parents=True, exist_ok=True)

    print(f"Downloading NVD data from {NVD_URL}...")
    try:
        response = requests.get(NVD_URL, stream=True, timeout=60)
        response.raise_for_status()  # Lança exceção para códigos de erro HTTP

        print(f"Saving temporary file to {DOWNLOAD_TMP_GZ}...")
        with open(DOWNLOAD_TMP_GZ, "wb") as f:
            for chunk in response.iter_content(chunk_size=8192):
                f.write(chunk)

        print(f"Extracting Gzip file to {OUTPUT_FILE_PATH}...")
        with gzip.open(DOWNLOAD_TMP_GZ, "rb") as f_in:
            with open(OUTPUT_FILE_PATH, "wb") as f_out:
                shutil.copyfileobj(f_in, f_out)
        print("Extraction complete.")

    except requests.RequestException as e:
        print(f"Error downloading NVD data: {e}")
        # Decide se quer remover o arquivo incompleto ou não
        if OUTPUT_FILE_PATH.exists():
            OUTPUT_FILE_PATH.unlink()
        if DOWNLOAD_TMP_GZ.exists():
            DOWNLOAD_TMP_GZ.unlink()
        return False
    except Exception as e:
        print(f"An unexpected error occurred during download/extraction: {e}")
        if OUTPUT_FILE_PATH.exists():
             OUTPUT_FILE_PATH.unlink()
        if DOWNLOAD_TMP_GZ.exists():
            DOWNLOAD_TMP_GZ.unlink()
        return False
    finally:
        # Limpa o arquivo Gzip baixado
        if DOWNLOAD_TMP_GZ.exists():
            print(f"Removing temporary file {DOWNLOAD_TMP_GZ}...")
            DOWNLOAD_TMP_GZ.unlink()

    print(f"NVD data successfully updated at {OUTPUT_FILE_PATH}")
    return True

if __name__ == "__main__":
    if not download_and_extract_nvd():
        exit(1)